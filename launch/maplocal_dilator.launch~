<launch>
  <!--param name="use_sim_time" value="true" /-->


  <!-- ROS node starts here -->
  <node name="maplocal_dilator_node" pkg="map_dilator" type="maplocal_dilator_node" output="screen">

    <!-- Name of you map topic (Gmapping set it to "map")-->
    <param name="map_topic_name"                    value="map" />

    <!-- choose the odometry data of the robot(usually it is the odometry that is generated by the wheel encoder)-->
    <param name="odom_topic_name"                   value="/segway/odometry/local_filtered" />

    <!-- The name of a topic which publishes the coordinates of each obstacle point into a Float32MultiArray-->
    <param name="grid_obstacles_array_name"         value="/roahm/grid_obstacles/array" />

    <!-- The name of a topic which publishes each obstacle point into pointcloud-->
    <param name="obstacles_pcd_topic_name"          value="/roahm/grid_obstacles/pcd" />

    <!-- The name of a topic which publishes the sharp points of obstacles contour into a Float32MultiArray, first point will repeat at the end-->
    <param name="contour_topic_name"                value="/roahm/contour/array" />

    <!-- The name of topics which publishes all the points of obstacles contour. into a Float32MultiArray && into images-->
    <param name="map_dilated_contour_name"          value="/roahm/dilated_obstacles/array" />
    <param name="map_dilated_img_name"              value="/roahm/dilated_obstacles/image" />

    <!-- The name of a topic which publishes the pose of the robot into global frame-->
    <param name="pose_on_map_name"                  value="/roahm/pose_odom" />

    <!-- The name of topics which publishes the outer contour of obstacles. into Array & images-->
    <param name="outer_contour_topic_name"          value="/roahm/outer_contour/array" />
    <param name="map_outer_dilated_contour_name"    value="/roahm/outer_dilated_obstacles/array" />
    <param name="map_outer_dilated_img_name"        value="/roahm/outer_dilated_obstacles/image" />

    <param name="use_range_filter"                  value="false" /><!-- set it to true if you inly wan to see obstacles within a certain range-->
    <param name="range_threshold"                   value="5.0" /><!-- set the threshold for the range_filter, "use_range_filter" must be "true"-->

    <param name="localfilter_size"                  value="16.0" /><!-- set the size of your local filter, default is 6*6 meters^2-->

    <param name="dilation_elem"                     value="0" /><!-- just set it to "0" if you don't know what it is-->
    <!--if( dilation_elem == 0 ){ dilation_type = MORPH_RECT; }
 //   else if( dilation_elem == 1 ){ dilation_type = MORPH_CROSS; }
 //   else if( dilation_elem == 2) { dilation_type = MORPH_ELLIPSE; }-->

    <param name="buffer_size"                       value="0.15" /><!-- buffer size for obstacles-->
    <param name="outer_buffer_size"                 value="0.25" /><!-- outer buffer size for obstacles-->

    <param name="publish_rate"                 value="20" /><!-- The publishing rate of topics, Default 20 Hz. Must be interger-->
    <param name="obs_confidence_threshold"          value="80.0" /><!-- The threshold for obstacles from SLAM-->



  </node>
</launch>
